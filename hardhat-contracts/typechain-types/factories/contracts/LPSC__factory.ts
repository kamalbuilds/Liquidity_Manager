/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LPSC, LPSCInterface } from "../../contracts/LPSC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "replyMessageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenToReturn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReplySent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "reply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200292f3803806200292f833981810160405281019062000037919062000821565b8181338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a590620008c9565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001355762000134816200060760201b60201c565b5b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505060006724f9b897ef58a9229050620001b573dc2cc710e42857672e7907cf474a69b63b93089f8273779877a7b0d9e8603169ddbd7836e478b46247896200073660201b60201c565b620001f073abfe9d11a2f1d61990d1d253ec98b5da00304f168273fd57b4ddbf88a4e07ff4e34c487b99af2fe82a056200073660201b60201c565b6200022b73835833d556299cdec623e7980e7369145b0375918273466d489b6d36e7e3b824ef491c225f5830e81cc16200073660201b60201c565b600067ccf0a31a221f3c9b905062000273730b9d5d9136855f6fec3c0993fee6e9ce8a2978468273779877a7b0d9e8603169ddbd7836e478b46247896200073660201b60201c565b620002ae73d21341536c5cf5eb1bcb58f6723ce26e8d8e90e48273fd57b4ddbf88a4e07ff4e34c487b99af2fe82a056200073660201b60201c565b620002e97370f5c5c40b873ea597776da2c21929a8282a3b358273466d489b6d36e7e3b824ef491c225f5830e81cc16200073660201b60201c565b60006754abf9fb1afeaf9590506200033173d14838a68e8afbade5efb411d5871ea0011afd288273779877a7b0d9e8603169ddbd7836e478b46247896200073660201b60201c565b6200036c730579b4c1c8acbff13c6253f1b10d66896bf399ef8273fd57b4ddbf88a4e07ff4e34c487b99af2fe82a056200073660201b60201c565b620003a7730e14dbe2c8e1121902208be173a3fb91bb125cdb8273466d489b6d36e7e3b824ef491c225f5830e81cc16200073660201b60201c565b600067adecc60412ce25a59050620003ef73326c977e6efc84e512bb9c30f76e30c160ed06fb8273779877a7b0d9e8603169ddbd7836e478b46247896200073660201b60201c565b6200042a73f1e3a5842eeef51f2967b3f05d45dd4f4205ff408273fd57b4ddbf88a4e07ff4e34c487b99af2fe82a056200073660201b60201c565b6200046573c1c76a8c5bfde1be034bbcd930c668726e7c19878273466d489b6d36e7e3b824ef491c225f5830e81cc16200073660201b60201c565b50505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620004de5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620004d59190620008fc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505073779877a7b0d9e8603169ddbd7836e478b462478973ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620005b892919062000934565b6020604051808303816000875af1158015620005d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005fe91906200099e565b50505062000b12565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000678576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200066f9062000a20565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b806002600085856040516020016200075092919062000ae2565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007e982620007bc565b9050919050565b620007fb81620007dc565b81146200080757600080fd5b50565b6000815190506200081b81620007f0565b92915050565b600080604083850312156200083b576200083a620007b7565b5b60006200084b858286016200080a565b92505060206200085e858286016200080a565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620008b160188362000868565b9150620008be8262000879565b602082019050919050565b60006020820190508181036000830152620008e481620008a2565b9050919050565b620008f681620007dc565b82525050565b6000602082019050620009136000830184620008eb565b92915050565b6000819050919050565b6200092e8162000919565b82525050565b60006040820190506200094b6000830185620008eb565b6200095a602083018462000923565b9392505050565b60008115159050919050565b620009788162000961565b81146200098457600080fd5b50565b60008151905062000998816200096d565b92915050565b600060208284031215620009b757620009b6620007b7565b5b6000620009c78482850162000987565b91505092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600062000a0860178362000868565b915062000a1582620009d0565b602082019050919050565b6000602082019050818103600083015262000a3b81620009f9565b9050919050565b60008160601b9050919050565b600062000a5c8262000a42565b9050919050565b600062000a708262000a4f565b9050919050565b62000a8c62000a8682620007dc565b62000a63565b82525050565b600067ffffffffffffffff82169050919050565b60008160c01b9050919050565b600062000ac08262000aa6565b9050919050565b62000adc62000ad68262000a92565b62000ab3565b82525050565b600062000af0828562000a77565b60148201915062000b02828462000ac7565b6008820191508190509392505050565b60805160a05160c051611dd862000b576000396000818161026e015281816104f90152610620015260008181610ae50152610bb501526000610bef0152611dd86000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806379ba50971161006657806379ba50971461011c57806385572ffb146101265780638da5cb5b14610142578063b0f479a114610160578063f2fde38b1461017e57610093565b806301ffc9a714610098578063378c2d48146100c85780633aeac4e1146100e457806351cff8d914610100575b600080fd5b6100b260048036038101906100ad9190610f34565b61019a565b6040516100bf9190610f7c565b60405180910390f35b6100e260048036038101906100dd91906110a1565b61026c565b005b6100fe60048036038101906100f9919061111c565b61070c565b005b61011a6004803603810190610115919061115c565b610850565b005b61012461094e565b005b610140600480360381019061013b91906111ad565b610ae3565b005b61014a610b88565b6040516101579190611205565b60405180910390f35b610168610bb1565b6040516101759190611205565b60405180910390f35b6101986004803603810190610193919061115c565b610bd9565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026557507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102f857506102c9610b88565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e9061127d565b60405180910390fd5b600060026000878660405160200161035092919061131b565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d29190611205565b602060405180830381865afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610413919061135c565b9050858110156104335761043282828861042d91906113b8565b610bed565b5b6000600167ffffffffffffffff8111156104505761044f6113ec565b5b60405190808252806020026020018201604052801561048957816020015b610476610e98565b81526020019060019003908161046e5790505b509050600060405180604001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200189815250905080826000815181106104d0576104cf61141b565b5b60200260200101819052508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008a6040518363ffffffff1660e01b8152600401610536929190611459565b6020604051808303816000875af1158015610555573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057991906114ae565b5060006040518060a00160405280886040516020016105989190611205565b6040516020818303038152906040528152602001876040516020016105bd91906114ea565b604051602081830303815290604052815260200184815260200173779877a7b0d9e8603169ddbd7836e478b462478973ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f98a846040518363ffffffff1660e01b815260040161067992919061172b565b6020604051808303816000875af1158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611770565b90507fefe454d83f9efbc27771ceee98dcec702c47527f9482f4715cb6c623eb34a3ac818a898b8a8f6040516106f79695949392919061179d565b60405180910390a15050505050505050505050565b610714610c92565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161074f9190611205565b602060405180830381865afa15801561076c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610790919061135c565b9050600081036107cc576040517fd0d04f6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610807929190611459565b6020604051808303816000875af1158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a91906114ae565b50505050565b610858610c92565b600047905060008103610897576040517fd0d04f6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516108bd9061182f565b60006040518083038185875af1925050503d80600081146108fa576040519150601f19603f3d011682016040523d82523d6000602084013e6108ff565b606091505b5050905080610949573383836040517f9d11f56300000000000000000000000000000000000000000000000000000000815260040161094093929190611844565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d5906118c7565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7357336040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401610b6a9190611205565b60405180910390fd5b610b8581610b8090611bef565b610d22565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b610be1610c92565b610bea81610d6c565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166369328dec8383306040518463ffffffff1660e01b8152600401610c4a93929190611c02565b6020604051808303816000875af1158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d919061135c565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1790611c85565b60405180910390fd5b565b60008160000151905060008260200151905060008060008560600151806020019051810190610d519190611ce3565b925092509250610d64838386848961026c565b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd190611d82565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f1181610edc565b8114610f1c57600080fd5b50565b600081359050610f2e81610f08565b92915050565b600060208284031215610f4a57610f49610ed2565b5b6000610f5884828501610f1f565b91505092915050565b60008115159050919050565b610f7681610f61565b82525050565b6000602082019050610f916000830184610f6d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc282610f97565b9050919050565b610fd281610fb7565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b6000819050919050565b61100881610ff5565b811461101357600080fd5b50565b60008135905061102581610fff565b92915050565b600067ffffffffffffffff82169050919050565b6110488161102b565b811461105357600080fd5b50565b6000813590506110658161103f565b92915050565b6000819050919050565b61107e8161106b565b811461108957600080fd5b50565b60008135905061109b81611075565b92915050565b600080600080600060a086880312156110bd576110bc610ed2565b5b60006110cb88828901610fe0565b95505060206110dc88828901611016565b94505060406110ed88828901611056565b93505060606110fe88828901610fe0565b925050608061110f8882890161108c565b9150509295509295909350565b6000806040838503121561113357611132610ed2565b5b600061114185828601610fe0565b925050602061115285828601610fe0565b9150509250929050565b60006020828403121561117257611171610ed2565b5b600061118084828501610fe0565b91505092915050565b600080fd5b600060a082840312156111a4576111a3611189565b5b81905092915050565b6000602082840312156111c3576111c2610ed2565b5b600082013567ffffffffffffffff8111156111e1576111e0610ed7565b5b6111ed8482850161118e565b91505092915050565b6111ff81610fb7565b82525050565b600060208201905061121a60008301846111f6565b92915050565b600082825260208201905092915050565b7f4f6e6c79204c505343206f72204f776e65722063616e2063616c6c0000000000600082015250565b6000611267601b83611220565b915061127282611231565b602082019050919050565b600060208201905081810360008301526112968161125a565b9050919050565b60008160601b9050919050565b60006112b58261129d565b9050919050565b60006112c7826112aa565b9050919050565b6112df6112da82610fb7565b6112bc565b82525050565b60008160c01b9050919050565b60006112fd826112e5565b9050919050565b6113156113108261102b565b6112f2565b82525050565b600061132782856112ce565b6014820191506113378284611304565b6008820191508190509392505050565b60008151905061135681610fff565b92915050565b60006020828403121561137257611371610ed2565b5b600061138084828501611347565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113c382610ff5565b91506113ce83610ff5565b92508282039050818111156113e6576113e5611389565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61145381610ff5565b82525050565b600060408201905061146e60008301856111f6565b61147b602083018461144a565b9392505050565b61148b81610f61565b811461149657600080fd5b50565b6000815190506114a881611482565b92915050565b6000602082840312156114c4576114c3610ed2565b5b60006114d284828501611499565b91505092915050565b6114e48161106b565b82525050565b60006020820190506114ff60008301846114db565b92915050565b61150e8161102b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561154e578082015181840152602081019050611533565b60008484015250505050565b6000601f19601f8301169050919050565b600061157682611514565b611580818561151f565b9350611590818560208601611530565b6115998161155a565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115d981610fb7565b82525050565b6115e881610ff5565b82525050565b60408201600082015161160460008501826115d0565b50602082015161161760208501826115df565b50505050565b600061162983836115ee565b60408301905092915050565b6000602082019050919050565b600061164d826115a4565b61165781856115af565b9350611662836115c0565b8060005b8381101561169357815161167a888261161d565b975061168583611635565b925050600181019050611666565b5085935050505092915050565b600060a08301600083015184820360008601526116bd828261156b565b915050602083015184820360208601526116d7828261156b565b915050604083015184820360408601526116f18282611642565b915050606083015161170660608601826115d0565b506080830151848203608086015261171e828261156b565b9150508091505092915050565b60006040820190506117406000830185611505565b818103602083015261175281846116a0565b90509392505050565b60008151905061176a81611075565b92915050565b60006020828403121561178657611785610ed2565b5b60006117948482850161175b565b91505092915050565b600060c0820190506117b260008301896114db565b6117bf6020830188611505565b6117cc60408301876114db565b6117d960608301866111f6565b6117e660808301856111f6565b6117f360a083018461144a565b979650505050505050565b600081905092915050565b50565b60006118196000836117fe565b915061182482611809565b600082019050919050565b600061183a8261180c565b9150819050919050565b600060608201905061185960008301866111f6565b61186660208301856111f6565b611873604083018461144a565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006118b1601683611220565b91506118bc8261187b565b602082019050919050565b600060208201905081810360008301526118e0816118a4565b9050919050565b600080fd5b6118f58261155a565b810181811067ffffffffffffffff82111715611914576119136113ec565b5b80604052505050565b6000611927610ec8565b905061193382826118ec565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115611962576119616113ec565b5b61196b8261155a565b9050602081019050919050565b82818337600083830152505050565b600061199a61199584611947565b61191d565b9050828152602081018484840111156119b6576119b5611942565b5b6119c1848285611978565b509392505050565b600082601f8301126119de576119dd61193d565b5b81356119ee848260208601611987565b91505092915050565b600067ffffffffffffffff821115611a1257611a116113ec565b5b602082029050602081019050919050565b600080fd5b600060408284031215611a3e57611a3d6118e7565b5b611a48604061191d565b90506000611a5884828501610fe0565b6000830152506020611a6c84828501611016565b60208301525092915050565b6000611a8b611a86846119f7565b61191d565b90508083825260208201905060408402830185811115611aae57611aad611a23565b5b835b81811015611ad75780611ac38882611a28565b845260208401935050604081019050611ab0565b5050509392505050565b600082601f830112611af657611af561193d565b5b8135611b06848260208601611a78565b91505092915050565b600060a08284031215611b2557611b246118e7565b5b611b2f60a061191d565b90506000611b3f8482850161108c565b6000830152506020611b5384828501611056565b602083015250604082013567ffffffffffffffff811115611b7757611b76611938565b5b611b83848285016119c9565b604083015250606082013567ffffffffffffffff811115611ba757611ba6611938565b5b611bb3848285016119c9565b606083015250608082013567ffffffffffffffff811115611bd757611bd6611938565b5b611be384828501611ae1565b60808301525092915050565b6000611bfb3683611b0f565b9050919050565b6000606082019050611c1760008301866111f6565b611c24602083018561144a565b611c3160408301846111f6565b949350505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611c6f601683611220565b9150611c7a82611c39565b602082019050919050565b60006020820190508181036000830152611c9e81611c62565b9050919050565b6000611cb082610f97565b9050919050565b611cc081611ca5565b8114611ccb57600080fd5b50565b600081519050611cdd81611cb7565b92915050565b600080600060608486031215611cfc57611cfb610ed2565b5b6000611d0a86828701611cce565b9350506020611d1b86828701611347565b9250506040611d2c86828701611cce565b9150509250925092565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611d6c601783611220565b9150611d7782611d36565b602082019050919050565b60006020820190508181036000830152611d9b81611d5f565b905091905056fea264697066735822122035340418ce80d6bf0bd90a5669c985717ca8f76aa78810dc2411e681bfe74ff364736f6c63430008130033";

type LPSCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPSCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPSC__factory extends ContractFactory {
  constructor(...args: LPSCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPSC> {
    return super.deploy(_router, _vault, overrides || {}) as Promise<LPSC>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, _vault, overrides || {});
  }
  override attach(address: string): LPSC {
    return super.attach(address) as LPSC;
  }
  override connect(signer: Signer): LPSC__factory {
    return super.connect(signer) as LPSC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPSCInterface {
    return new utils.Interface(_abi) as LPSCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LPSC {
    return new Contract(address, _abi, signerOrProvider) as LPSC;
  }
}
